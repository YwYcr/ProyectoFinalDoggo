@model ProyectoFinalDoggo.Models.compras

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/DoggoLayout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>compras</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IDTrans)

        <div class="form-group">
            ID Producto
            <div class="col-md-10">
                @Html.DropDownList("IDProd", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IDProd, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            Usuario
            <div class="col-md-10">
                @Html.DropDownList("usuario", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.usuario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            Costo
            <div class="col-md-10">
                @Html.EditorFor(model => model.COSTO, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.COSTO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @if (Session != null && Session["usuario"] != null && Session["rol"].ToString() == "admin")
                {
                    <div class="text-center">
                        <input type="submit" value="Guadar" class="btn btn-primary" />
                    </div>
                }
            </div>
        </div>
    </div>

}
@if (Session != null && Session["usuario"] != null && Session["rol"].ToString() == "admin")
{
    <div>
        <a href="@Url.Action("Index")" class="btn btn-dark bottom-right">Volver</a>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
